# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.

  rules:
  # Error
  #    - always_use_package_imports
  #    - avoid_dynamic_calls
  #    - avoid_print
  #    - avoid_relative_lib_imports
  #    - avoid_returning_null_for_future
  #    - avoid_slow_async_io
  #    - avoid_type_to_string
  #    - avoid_types_as_parameter_names
  #    - cancel_subscriptions
  #    - close_sinks
  #    - comment_references
  #    - control_flow_in_finally
  #    - diagnostic_describe_all_properties
  #    - discarded_futures
  #    - empty_statements
  #    - hash_and_equals
  #    - iterable_contains_unrelated_type
  #    - list_remove_unrelated_type
  #    - literal_only_boolean_expressions
  #    - no_adjacent_strings_in_list
  #    - no_duplicate_case_values
  #    - no_logic_in_create_state
  #    - prefer_void_to_null
  #    - test_types_in_equals
  #    - throw_in_finally
  #    - unnecessary_statements
  #    - unrelated_type_equality_checks
  #    - use_key_in_widget_constructors
  #    - valid_regexps
  #  # Style
  #    - always_declare_return_types
  #    - always_put_control_body_on_new_line
  #    - always_put_required_named_parameters_first
  #    - always_require_non_null_named_parameters
  #    - always_specify_types
  #    - annotate_overrides
  #    - avoid_annotating_with_dynamic
  #    - avoid_bool_literals_in_conditional_expressions
  #    - avoid_catches_without_on_clauses
  #    - avoid_catching_errors
  #    - avoid_classes_with_only_static_members
  #    - avoid_double_and_int_checks
  #    - avoid_escaping_inner_quotes
  #    - avoid_field_initializers_in_const_classes
  #    - avoid_final_parameters
  #    - avoid_function_literals_in_foreach_calls
  #    - avoid_implementing_value_types
  #    - avoid_init_to_null
  #    - avoid_js_rounded_ints
  #    - avoid_multiple_declarations_per_line
  #    - avoid_null_checks_in_equality_operators
  #    - avoid_equals_and_hash_code_on_mutable_classes
  #    - avoid_positional_boolean_parameters
  #    - avoid_private_typedef_functions
  #    - avoid_redundant_argument_values
  #    - avoid_renaming_method_parameters
  #    - avoid_returning_null
  #    - avoid_returning_null_for_void
  #    - avoid_returning_this
  #    - avoid_return_types_on_setters
  #    - avoid_setters_without_getters
  #    - avoid_shadowing_type_parameters
  #    - avoid_single_cascade_in_expression_statements
  #    - avoid_unnecessary_containers
  #    - avoid_unused_constructor_parameters
  #    - avoid_void_async
  #    - await_only_futures
  #    - camel_case_extensions
  #    - camel_case_types
  #    - cascade_invocations
  #    - conditional_uri_does_not_exist
  #    - constant_identifier_names
  #    - curly_braces_in_flow_control_structures
  #    - deprecated_consistency
  #    - do_not_use_environment
  #    - empty_catches
  #    - empty_constructor_bodies
  #    - eol_at_end_of_file
  #    - exhaustive_cases
  #    - file_names
  #    - flutter_style_todos
  #    - implementation_imports
  #    - join_return_with_assignment
  #    - leading_newlines_in_multiline_strings
  #    - library_prefixes
  #    - library_names
  #    - library_private_types_in_public_api
  #    - lines_longer_than_80_chars
  #    - missing_whitespace_between_adjacent_strings
  #    - non_constant_identifier_names
  #    - no_leading_underscores_for_library_prefixes
  #    - no_leading_underscores_for_local_identifiers
  #    - noop_primitive_operations
  #    - no_runtimeType_toString
  #    - null_check_on_nullable_type_parameter
  #    - null_closures
  #    - one_member_abstracts
  #    - only_throw_errors
  #    - overridden_fields
  #    - package_api_docs
  #    - package_prefixed_library_names
  #    - parameter_assignments
  #    - prefer_adjacent_string_concatenation
  #    - prefer_asserts_in_initializer_lists
  #    - prefer_asserts_with_message
  #    - prefer_collection_literals
  #    - prefer_conditional_assignment
  #    - prefer_const_constructors
  #    - prefer_const_constructors_in_immutables
  #    - prefer_const_declarations
  #    - prefer_const_literals_to_create_immutables
  #    - prefer_constructors_over_static_methods
  #    - prefer_contains
  #    - prefer_expression_function_bodies
  #    - prefer_final_fields
  #    - prefer_final_in_for_each
  #    - prefer_foreach
  #    - prefer_if_null_operators
  #    - prefer_inlined_adds
  #    - prefer_initializing_formals
  #    - prefer_interpolation_to_compose_strings
  #    - prefer_int_literals
  #    - prefer_is_empty
  #    - prefer_is_not_empty
  #    - prefer_is_not_operator
  #    - prefer_iterable_whereType
  #    - prefer_mixin
  #    - prefer_null_aware_operators
  #    - prefer_null_aware_method_calls
  #    - prefer_single_quotes
  #    - prefer_spread_collections
  #    - prefer_typing_uninitialized_variables
  #    - recursive_getters
  #    - sized_box_for_whitespace
  #    - sort_child_properties_last
  #    - sort_constructors_first
  #    - type_init_formals
  #    - unnecessary_brace_in_string_interps
  #    - unnecessary_const
  #    - unnecessary_constructor_name
  #    - unnecessary_new
  #    - unnecessary_null_aware_assignments
  #    - unnecessary_null_in_if_null_operators
  #    - unnecessary_late
  #    - unnecessary_overrides
  #    - unnecessary_string_interpolations
  #    - unnecessary_string_escapes
  #    - unnecessary_this
  #    - use_colored_box
  #    - use_decorated_box
  #    - use_function_type_syntax_for_parameters
  #    - use_rethrow_when_possible
  #    - void_checks

  # avoid_print: false  # Uncomment to disable the `avoid_print` rule
  # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options